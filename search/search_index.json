{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Coffeecord is a simple and extensive Discord API wrapper for the JVM. It provides all functionality a Discord bot developer could need. All aspects of the library should be documented here, if not please contact a contributor to create documentation for the missing features.","title":"Home"},{"location":"#overview","text":"Coffeecord is a simple and extensive Discord API wrapper for the JVM. It provides all functionality a Discord bot developer could need. All aspects of the library should be documented here, if not please contact a contributor to create documentation for the missing features.","title":"Overview"},{"location":"getting-started/creating-a-client/","text":"Creating a client Seeing as Coffeecord supports both Java and Kotlin, we provide examples for both below. Token Please make sure you change any text stating \"token\" to your bot's token. Kotlin DSL We have a more in-depth article on our Kotlin DSL here . Java Kotlin 1 2 3 4 5 6 7 8 9 10 11 12 package com.example.bot ; import xyz.deftu.coffeecord.* ; public class ExampleBot { public static void main ( String [] args ) { DiscordClient client = new DiscordClient (); client . login ( \"token\" ); } } 1 2 3 4 5 6 7 8 9 10 11 package com.example.bot import xyz.deftu.coffeecord.* fun main () { val client = discord { token = \"token\" } client . login () }","title":"Creating a client"},{"location":"getting-started/creating-a-client/#creating-a-client","text":"Seeing as Coffeecord supports both Java and Kotlin, we provide examples for both below. Token Please make sure you change any text stating \"token\" to your bot's token. Kotlin DSL We have a more in-depth article on our Kotlin DSL here . Java Kotlin 1 2 3 4 5 6 7 8 9 10 11 12 package com.example.bot ; import xyz.deftu.coffeecord.* ; public class ExampleBot { public static void main ( String [] args ) { DiscordClient client = new DiscordClient (); client . login ( \"token\" ); } } 1 2 3 4 5 6 7 8 9 10 11 package com.example.bot import xyz.deftu.coffeecord.* fun main () { val client = discord { token = \"token\" } client . login () }","title":"Creating a client"},{"location":"getting-started/download/","text":"Download You can find the latest version of Coffeecord here . Adding to your project Version Replace VERSION in your build file with the version of Coffeecord you'd like to use. Case-sensitive Dependency information in almost all build tools is case-sensitive, so make sure you use the proper casing! Gradle Maven SBT Leiningen 1 2 3 dependencies { implementation(\"xyz.deftu.coffeecord:Coffeecord:VERSION\") } 1 2 3 4 5 6 7 <dependencies> <dependency> <groupId>xyz.deftu.coffeecord</groupId> <artifactId>Coffeecord</artifactId> <version>VERSION</version> </dependency> </dependencies> 1 libraryDependencies += \"xyz.deftu.coffeecord\" % \"Coffeecord\" % \"VERSION\" 1 :dependencies [[xyz.deftu.coffeecord/Coffeecord \"VERSION\"]]","title":"Download"},{"location":"getting-started/download/#download","text":"You can find the latest version of Coffeecord here .","title":"Download"},{"location":"getting-started/download/#adding-to-your-project","text":"Version Replace VERSION in your build file with the version of Coffeecord you'd like to use. Case-sensitive Dependency information in almost all build tools is case-sensitive, so make sure you use the proper casing! Gradle Maven SBT Leiningen 1 2 3 dependencies { implementation(\"xyz.deftu.coffeecord:Coffeecord:VERSION\") } 1 2 3 4 5 6 7 <dependencies> <dependency> <groupId>xyz.deftu.coffeecord</groupId> <artifactId>Coffeecord</artifactId> <version>VERSION</version> </dependency> </dependencies> 1 libraryDependencies += \"xyz.deftu.coffeecord\" % \"Coffeecord\" % \"VERSION\" 1 :dependencies [[xyz.deftu.coffeecord/Coffeecord \"VERSION\"]]","title":"Adding to your project"},{"location":"getting-started/getting-help/","text":"Getting help You can receive support for Coffeecord in our Discord server . Spam Asking a question multiple times over the course of an hour or pinging people for help will result in a mute or ban.","title":"Getting help"},{"location":"getting-started/getting-help/#getting-help","text":"You can receive support for Coffeecord in our Discord server . Spam Asking a question multiple times over the course of an hour or pinging people for help will result in a mute or ban.","title":"Getting help"},{"location":"information/dependencies/","text":"Dependencies Java-WebSocket - Connecting to Discord's gateway websocket. OkHttp - Making requests to Discord's HTTP API. Deftils - Small utilities and checks. GSON - JSON data handling and serialization. SimpleEventBus - Providing events to the user. Caffeine v2 - Temporary caching. Log4j - Console logging and debugging.","title":"Dependencies"},{"location":"information/dependencies/#dependencies","text":"Java-WebSocket - Connecting to Discord's gateway websocket. OkHttp - Making requests to Discord's HTTP API. Deftils - Small utilities and checks. GSON - JSON data handling and serialization. SimpleEventBus - Providing events to the user. Caffeine v2 - Temporary caching. Log4j - Console logging and debugging.","title":"Dependencies"},{"location":"kotlin-dsl/base/","text":"Base DSL TODO","title":"Base"},{"location":"kotlin-dsl/base/#base-dsl","text":"TODO","title":"Base DSL"}]}